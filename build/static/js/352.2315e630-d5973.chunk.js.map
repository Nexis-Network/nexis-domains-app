{"version":3,"file":"static/js/352.2315e630-d5973.chunk.js","mappings":"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","sources":["components/Icons/InActiveHeart.js","components/Icons/ActiveHeart.js","components/AddFavourite/AddFavourite.js","apollo/mutations/mutations.js","components/DomainItem/ExpiryDate.js","components/Forms/Tick.js","components/Forms/Checkbox.js","components/QueryAccount.js","components/Typography/Basic.js","utils/dates.js"],"sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled/macro'\n\nconst Heart = ({ active, className }) => (\n  <HeartContainer width=\"25\" height=\"24\" className={className} active={active}>\n    <path\n      d=\"M10.555 2.695C8.47.436 5.123.437 3.038 2.695l-.2.216c-2.45 2.654-2.45 6.991-.001 9.644l9.62 10.42c.03.034.054.034.086 0l9.619-10.42c2.451-2.654 2.45-6.988-.002-9.644l-.2-.216c-2.086-2.26-5.43-2.26-7.517 0l-.817.884a1.525 1.525 0 0 1-2.253 0l-.818-.884z\"\n      stroke=\"#E7E7E7\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      fillRule=\"evenodd\"\n    />\n  </HeartContainer>\n)\n\nconst HeartContainer = styled('svg')`\n  vertical-align: middle;\n  path {\n    fill: ${({ active }) => (active ? '#C7D3E3' : 'none')};\n    stroke: ${({ active }) => (active ? '#C7D3E3' : 'E7E7E7')};\n    transition: 0.2s ease-in;\n  }\n\n  &:hover {\n    path {\n      fill: #c7d3e3;\n      stroke: #c7d3e3;\n    }\n  }\n`\n\nexport default Heart\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\n\nconst Heart = ({ active, className }) => (\n  <HeartContainer width=\"25\" height=\"24\" active={active} className={className}>\n    <path\n      d=\"M10.555 2.695C8.47.436 5.123.437 3.038 2.695l-.2.216c-2.45 2.654-2.45 6.991-.001 9.644l9.62 10.42c.03.034.054.034.086 0l9.619-10.42c2.451-2.654 2.45-6.988-.002-9.644l-.2-.216c-2.086-2.26-5.43-2.26-7.517 0l-.817.884a1.525 1.525 0 0 1-2.253 0l-.818-.884z\"\n      stroke=\"#E7E7E7\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      fillRule=\"evenodd\"\n    />\n  </HeartContainer>\n)\n\nconst HeartContainer = styled('svg')`\n  vertical-align: middle;\n  path {\n    fill: #c7d3e3;\n    stroke: #c7d3e3;\n    transition: 0.2s ease-out;\n  }\n\n  &:hover {\n    path {\n      fill: none;\n      stroke: #e7e7e7;\n    }\n  }\n`\n\nexport default Heart\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport { useMutation } from '@apollo/client'\nimport { gql } from '@apollo/client'\n\nimport {\n  addFavouriteMutation,\n  deleteFavouriteMutation,\n  addSubDomainFavouriteMutation,\n  deleteSubDomainFavouriteMutation\n} from '../../apollo/mutations/mutations'\n\nimport InActiveHeartDefault from '../Icons/InActiveHeart'\nimport ActiveHeartDefault from '../Icons/ActiveHeart'\n\nconst ActiveHeart = styled(ActiveHeartDefault)`\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst InActiveHeart = styled(InActiveHeartDefault)`\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst ADD_FAVOURITE = gql`\n  mutation AddFavouriteMutation($domain: Domain) {\n    addFavourite(domain: $domain) @client\n  }\n`\nconst ADD_SUBDOMAIN_FAVOURITE = gql`\n  mutation AddSubDomainFavourite($domain: Domain) {\n    addSubDomainFavourite(domain: $domain) @client\n  }\n`\n\nconst DELETE_FAVOURITE = gql`\n  mutation DeleteFavouriteMutation($domain: Domain) {\n    deleteFavourite(domain: $domain) @client\n  }\n`\nconst DELETE_SUBDOMAIN_FAVOURITE = gql`\n  mutation DeleteSubDomainFavourite($domain: Domain) {\n    deleteSubDomainFavourite(domain: $domain) @client\n  }\n`\n\nconst AddFavourite = ({ domain, isFavourite, isSubDomain }) => {\n  const [subDomainFavouriteMutation] = useMutation(\n    isFavourite ? DELETE_SUBDOMAIN_FAVOURITE : ADD_SUBDOMAIN_FAVOURITE,\n    {\n      variables: {\n        domain: {\n          name: domain.name\n        }\n      }\n    }\n  )\n\n  const [favouriteMutation] = useMutation(\n    isFavourite ? DELETE_FAVOURITE : ADD_FAVOURITE,\n    {\n      variables: {\n        domain: {\n          name: domain.name\n        }\n      }\n    }\n  )\n\n  if (isSubDomain) {\n    return (\n      <AddFavouriteContainer\n        data-testid=\"add-favorite\"\n        onClick={e => {\n          e.preventDefault()\n          isFavourite\n            ? deleteSubDomainFavouriteMutation(domain)\n            : addSubDomainFavouriteMutation(domain)\n          subDomainFavouriteMutation()\n        }}\n      >\n        {isFavourite ? <ActiveHeart /> : <InActiveHeart />}\n      </AddFavouriteContainer>\n    )\n  }\n\n  return (\n    <AddFavouriteContainer\n      data-testid=\"add-favorite\"\n      onClick={e => {\n        e.preventDefault()\n        isFavourite\n          ? deleteFavouriteMutation(domain)\n          : addFavouriteMutation(domain)\n        favouriteMutation()\n      }}\n    >\n      {isFavourite ? <ActiveHeart /> : <InActiveHeart />}\n    </AddFavouriteContainer>\n  )\n}\n\nconst AddFavouriteContainer = styled('div')`\n  padding: 5px;\n`\n\nexport default AddFavourite\n","import {\n  accountsReactive,\n  networkIdReactive,\n  networkReactive,\n  reverseRecordReactive,\n  isReadOnlyReactive,\n  isRunningAsSafeAppReactive,\n  favouritesReactive,\n  subDomainFavouritesReactive,\n  web3ProviderReactive,\n  delegatesReactive\n} from '../reactiveVars'\nimport getShouldDelegate from '../../api/delegate'\nimport {\n  getAccounts,\n  getNetwork,\n  getNetworkId\n} from '@nexis-network/domains-ui'\nimport { disconnect, connect } from '../../api/web3modal'\nimport { getReverseRecord } from '../sideEffects'\nimport { isRunningAsSafeApp } from 'utils/safeApps'\n\nexport const setWeb3ProviderLocalMutation = async provider => {\n  web3ProviderReactive(provider)\n\n  const accounts = await getAccounts()\n\n  if (provider) {\n    if (provider.events?.removeAllListeners)\n      provider.events.removeAllListeners()\n    setAccountsLocalMutation(accounts)\n  }\n\n  provider?.on('chainChanged', _chainId => {\n    console.log('chain changed: ', _chainId)\n    setNetworkIdLocalMutation(parseInt(_chainId))\n  })\n\n  provider?.on('accountsChanged', async accounts => {\n    console.log('accounts changed')\n  })\n\n  return provider\n}\n\nexport const getNetworkMutation = async () => {\n  return networkReactive(await getNetwork())\n}\n\nexport const setAccountsLocalMutation = accounts => {\n  return accountsReactive(accounts)\n}\n\nexport const getIsReadOnlyMutation = () => {}\n\nexport const setNetworkIdLocalMutation = networkId => {\n  return networkIdReactive(networkId)\n}\n\nexport const getIsRunningAsSafeAppMutation = async () => {\n  return isRunningAsSafeAppReactive(isRunningAsSafeApp())\n}\n\nexport const connectMutation = async address => {\n  let network\n  try {\n    network = await connect()\n  } catch (e) {\n    console.error('connect mutation error: ', e)\n    //setError({ variables: { message: e?.message } })\n  }\n  if (network) {\n    networkIdReactive(await getNetworkId())\n    isReadOnlyReactive(false)\n    reverseRecordReactive(await getReverseRecord(address))\n    delegatesReactive(await getShouldDelegate(address))\n  }\n}\n\nexport const addFavouriteMutation = domain => {\n  const favourites = [...favouritesReactive(), domain]\n  window.localStorage.setItem('ensFavourites', JSON.stringify(favourites))\n  return favouritesReactive(favourites)\n}\n\nexport const deleteFavouriteMutation = domain => {\n  const previous = favouritesReactive()\n  const favourites = previous.filter(\n    previousDomain => previousDomain.name !== domain.name\n  )\n  window.localStorage.setItem('ensFavourites', JSON.stringify(favourites))\n  return favouritesReactive(favourites)\n}\n\nexport const addSubDomainFavouriteMutation = domain => {\n  const subDomainFavourites = [...subDomainFavouritesReactive(), domain]\n  window.localStorage.setItem(\n    'ensSubDomainFavourites',\n    JSON.stringify(subDomainFavourites)\n  )\n  return subDomainFavouritesReactive(subDomainFavourites)\n}\n\nexport const deleteSubDomainFavouriteMutation = domain => {\n  const subDomainFavourites = subDomainFavouritesReactive().filter(\n    previousDomain => previousDomain.name !== domain.name\n  )\n  window.localStorage.setItem(\n    'ensSubDomainFavourites',\n    JSON.stringify(subDomainFavourites)\n  )\n  return subDomainFavourites\n}\n\nexport const setIsAppReady = isAppReady => {\n  return\n}\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport { useTranslation } from 'react-i18next'\nimport {\n  formatDate,\n  calculateIsExpiredSoon,\n  GRACE_PERIOD,\n  PREMIUM_PERIOD\n} from 'utils/dates'\n\nconst ExpiryDateContainer = styled('p')`\n  font-size: 18px;\n  font-weight: 100;\n  color: ${({ isExpiredSoon }) => (isExpiredSoon ? 'red' : '#adbbcd')};\n`\n\nconst ExpiryDate = ({ expiryDate, domain, name }) => {\n  let isExpiredSoon,\n    isExpired,\n    gracePeriodEndDate,\n    isUnderPremiumSale,\n    isInGracePeriod,\n    endOfPremiumDate,\n    message\n  let { t } = useTranslation()\n  const now = new Date()\n  if (expiryDate) {\n    isExpiredSoon = calculateIsExpiredSoon(expiryDate)\n    isExpired = now > new Date(parseInt(expiryDate * 1000))\n    gracePeriodEndDate = new Date((parseInt(expiryDate) + GRACE_PERIOD) * 1000)\n    endOfPremiumDate = new Date(\n      (parseInt(expiryDate) + GRACE_PERIOD + PREMIUM_PERIOD) * 1000\n    )\n    if (isExpired) {\n      isInGracePeriod = now < gracePeriodEndDate\n      isUnderPremiumSale = !isInGracePeriod && now < endOfPremiumDate\n      if (isInGracePeriod) {\n        message = `${t('singleName.expiry.gracePeriodEnds')} ${formatDate(\n          gracePeriodEndDate\n        )}`\n      } else if (isUnderPremiumSale) {\n        message = t('singleName.expiry.isUnderPremiumSale')\n      } else {\n        // sale under normal price\n      }\n    } else {\n      // not expired\n      message = `${t('c.expires')} ${formatDate(parseInt(expiryDate * 1000))}`\n    }\n  } else {\n    return <span>&nbsp;</span>\n  }\n  return (\n    <ExpiryDateContainer\n      data-testid={`expiry-date-${name}`}\n      isExpiredSoon={isExpiredSoon}\n    >\n      {message}\n    </ExpiryDateContainer>\n  )\n}\n\nexport default ExpiryDate\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\n\nconst activeColourSwitch = props => (props.active ? '#5284FF' : '#B0BECF')\n\nconst TickContainer = styled('div')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 23px;\n  width: 23px;\n\n  border-radius: 5px;\n  border: 2px solid ${activeColourSwitch};\n`\n\nconst TickContainerDouble = styled('div')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 20px;\n  width: 20px;\n\n  border-radius: 3px;\n\n  box-shadow: 0 0 0 2px ${activeColourSwitch}, -5px -5px 0 0 white,\n    -5px -5px 0 2px ${activeColourSwitch};\n`\n\nconst Svg = styled('svg')`\n  margin-top: 2px;\n  path {\n    fill: ${activeColourSwitch};\n    opacity: ${props => (props.active || props.hover ? '1' : '0')};\n  }\n`\n\nconst Tick = ({ active, className, hover }) => (\n  <TickContainer className={className} active={active}>\n    <Svg\n      width=\"11\"\n      height=\"8\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      active={active}\n      hover={hover}\n    >\n      <path\n        d=\"M9.63 0L4.537 5.202 1.37 1.967 0 3.367 4.537 8 11 1.399z\"\n        fillRule=\"evenodd\"\n      />\n    </Svg>\n  </TickContainer>\n)\n\nexport default Tick\n\nexport const DoubleBorderTick = ({ active, className, hover }) => (\n  <TickContainerDouble className={className} active={active}>\n    <Svg\n      width=\"11\"\n      height=\"8\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      active={active}\n      hover={hover}\n    >\n      <path\n        d=\"M9.63 0L4.537 5.202 1.37 1.967 0 3.367 4.537 8 11 1.399z\"\n        fillRule=\"evenodd\"\n      />\n    </Svg>\n  </TickContainerDouble>\n)\n","import React, { useState } from 'react'\nimport styled from '@emotion/styled/macro'\nimport Tick, { DoubleBorderTick } from './Tick'\n\nconst CheckboxContainer = styled('div')`\n  align-self: center;\n  input {\n    display: none;\n  }\n\n  label {\n    font-size: 22px;\n    font-weight: 200;\n    color: #5f5f5f;\n    text-transform: capitalize;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`\n\nfunction Checkbox({\n  className,\n  onClick,\n  checked,\n  name,\n  children,\n  testid,\n  type = 'normal'\n}) {\n  const [hover, setHover] = useState(false)\n  return (\n    <CheckboxContainer\n      data-testid={testid}\n      className={className}\n      onClick={onClick}\n    >\n      <label\n        htmlFor={name}\n        onMouseOver={() => setHover(true)}\n        onMouseOut={() => setHover(false)}\n      >\n        {type === 'double' ? (\n          <DoubleBorderTick active={checked ? true : false} hover={hover} />\n        ) : (\n          <Tick active={checked ? true : false} hover={hover} />\n        )}\n        <span>{children}</span>\n      </label>\n      <input type=\"checkbox\" name={name} checked={checked} readOnly />\n    </CheckboxContainer>\n  )\n}\n\nexport default Checkbox\n","import { useQuery } from '@apollo/client'\nimport { gql } from '@apollo/client'\n\nconst GET_ACCOUNTS = gql`\n  query getAccounts @client {\n    accounts\n  }\n`\n\nexport function useAccount() {\n  const {\n    data: { accounts }\n  } = useQuery(GET_ACCOUNTS)\n  if (!accounts) {\n    return '0x0000000000000000000000000000000000000000'\n  }\n  return accounts[0]\n}\n","import styled from '@emotion/styled/macro'\nimport mq from 'mediaQuery'\n\nexport const H2 = styled('h2')`\n  font-size: 18px;\n  font-weight: 200;\n  color: #adbbcd;\n\n  ${mq.medium`\n    font-size: 22px;\n  `}\n`\n\nexport const Title = styled('h2')`\n  font-size: 18px;\n  font-weight: 100;\n  padding: 0;\n  margin: 0;\n  ${mq.medium`\n    font-size: 28px;\n  `}\n`\n\nexport const HR = styled('hr')`\n  border: 0;\n  border-top: 1px dashed #d3d3d3;\n  background-color: #fff;\n  margin-bottom: 30px;\n  margin-top: 0;\n`\n","import moment from 'moment'\n\nexport const GRACE_PERIOD = 86400 * 90\nexport const PREMIUM_PERIOD = 86400 * 28\n\nexport function formatDate(unixTimeStamp, noTime) {\n  let date = moment(unixTimeStamp).format('YYYY.MM.DD')\n  if (!noTime) {\n    date = date + ' at ' + moment(unixTimeStamp).format('HH:mm (UTCZ)')\n  }\n  return date\n}\n\nexport function humanizeDate(timeLeft) {\n  if (timeLeft < 3600000) {\n    const minutes = Math.floor(moment.duration(timeLeft).asMinutes())\n    const seconds = Math.floor(moment.duration(timeLeft).seconds())\n    return `${minutes} m ${seconds}s`\n  } else {\n    return `${Math.floor(\n      moment\n        .duration(timeLeft)\n        .asHours()\n        .toFixed(0)\n    )}h ${moment\n      .duration(timeLeft)\n      .minutes()\n      .toFixed(0)}m`\n  }\n}\n\nexport function calculateIsExpiredSoon(expiryDate) {\n  if (!expiryDate) return expiryDate\n\n  const ADVANCE_WARNING_DAYS = 30\n\n  const currentTime = new Date().getTime()\n  const expiryTime = new Date(expiryDate * 1000).getTime()\n  const differenceInTime = expiryTime - currentTime\n  const differenceInDays = differenceInTime / (1000 * 3600 * 24)\n\n  return differenceInDays < ADVANCE_WARNING_DAYS\n}\n\nexport const yearInSeconds = 31556952\n\nexport function calculateDuration(years) {\n  return parseInt(parseFloat(years) * yearInSeconds)\n}\n"],"names":["HeartContainer","_styled","target","_ref2","active","_ref3","_ref","className","_jsx","width","height","children","d","stroke","strokeWidth","fill","fillRule","name","styles","ActiveHeart","ActiveHeartDefault","InActiveHeart","InActiveHeartDefault","ADD_FAVOURITE","gql","_templateObject","_taggedTemplateLiteral","ADD_SUBDOMAIN_FAVOURITE","_templateObject2","DELETE_FAVOURITE","_templateObject3","DELETE_SUBDOMAIN_FAVOURITE","_templateObject4","AddFavouriteContainer","domain","isFavourite","isSubDomain","_useMutation","useMutation","variables","subDomainFavouriteMutation","_slicedToArray","_useMutation3","favouriteMutation","onClick","e","preventDefault","subDomainFavourites","subDomainFavouritesReactive","filter","previousDomain","window","localStorage","setItem","JSON","stringify","deleteSubDomainFavouriteMutation","concat","_toConsumableArray","addSubDomainFavouriteMutation","favourites","favouritesReactive","deleteFavouriteMutation","addFavouriteMutation","ExpiryDateContainer","isExpiredSoon","isExpired","gracePeriodEndDate","isUnderPremiumSale","isInGracePeriod","endOfPremiumDate","message","expiryDate","t","useTranslation","now","Date","calculateIsExpiredSoon","parseInt","GRACE_PERIOD","PREMIUM_PERIOD","formatDate","activeColourSwitch","props","TickContainer","TickContainerDouble","Svg","hover","xmlns","DoubleBorderTick","CheckboxContainer","checked","testid","_ref$type","type","_useState","useState","_useState2","setHover","_jsxs","htmlFor","onMouseOver","onMouseOut","Tick","readOnly","GET_ACCOUNTS","useAccount","accounts","useQuery","data","H2","mq","medium","Title","HR","unixTimeStamp","noTime","date","moment","format","currentTime","getTime","yearInSeconds","calculateDuration","years","parseFloat"],"sourceRoot":""}